{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","img/image.png","App.jsx","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","xs","md","component","Card","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","URL","fetchData","country","a","changeableURL","axios","get","modifiedData","console","log","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","selected","i","App","state","fetchedData","setState","FetchData","this","src","logo","alt","img","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.63a83a2d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3jv8R\",\"card\":\"Cards_card__1vdG9\",\"infected\":\"Cards_infected__1XE8f\",\"recovered\":\"Cards_recovered__25VJZ\",\"deaths\":\"Cards_deaths__1pF7Q\"};","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\n\r\nimport styles from \"./Cards.module.css\";\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n\tif (!confirmed) {\r\n\t\treturn \"Loading...\";\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={styles.container}>\r\n\t\t\t<Grid container spacing={3} justify='center'>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\titem\r\n\t\t\t\t\txs={12}\r\n\t\t\t\t\tmd={3}\r\n\t\t\t\t\tcomponent={Card}\r\n\t\t\t\t\tclassName={cx(styles.card, styles.infected)}>\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography color='textSecondary' gutterBottom>\r\n\t\t\t\t\t\t\tInfected\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant='h5'>\r\n\t\t\t\t\t\t\t<CountUp\r\n\t\t\t\t\t\t\t\tstart={0}\r\n\t\t\t\t\t\t\t\tend={confirmed.value}\r\n\t\t\t\t\t\t\t\tduration={2.5}\r\n\t\t\t\t\t\t\t\tseparator=','\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography color='textSecondary'>\r\n\t\t\t\t\t\t\t{new Date(lastUpdate).toDateString()}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant='body2'>\r\n\t\t\t\t\t\t\tNumber of active cases of COVID-19\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\titem\r\n\t\t\t\t\tcomponent={Card}\r\n\t\t\t\t\txs={12}\r\n\t\t\t\t\tmd={3}\r\n\t\t\t\t\tclassName={cx(styles.card, styles.recovered)}>\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography color='textSecondary' gutterBottom>\r\n\t\t\t\t\t\t\tRecovered\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant='h5'>\r\n\t\t\t\t\t\t\t<CountUp\r\n\t\t\t\t\t\t\t\tstart={0}\r\n\t\t\t\t\t\t\t\tend={recovered.value}\r\n\t\t\t\t\t\t\t\tduration={2.5}\r\n\t\t\t\t\t\t\t\tseparator=','\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography color='textSecondary'>\r\n\t\t\t\t\t\t\t{new Date(lastUpdate).toDateString()}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant='body2'>\r\n\t\t\t\t\t\t\tNumber of recoveries from COVID-19\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\titem\r\n\t\t\t\t\tcomponent={Card}\r\n\t\t\t\t\txs={12}\r\n\t\t\t\t\tmd={3}\r\n\t\t\t\t\tclassName={cx(styles.card, styles.deaths)}>\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography color='textSecondary' gutterBottom>\r\n\t\t\t\t\t\t\tDeaths\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant='h5'>\r\n\t\t\t\t\t\t\t<CountUp\r\n\t\t\t\t\t\t\t\tstart={0}\r\n\t\t\t\t\t\t\t\tend={deaths.value}\r\n\t\t\t\t\t\t\t\tduration={2.5}\r\n\t\t\t\t\t\t\t\tseparator=','\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography color='textSecondary'>\r\n\t\t\t\t\t\t\t{new Date(lastUpdate).toDateString()}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant='body2'>\r\n\t\t\t\t\t\t\tNumber of deaths caused by COVID-19\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Cards;\r\n","import axios from \"axios\";\r\n\r\nconst URL = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async country => {\r\n\tlet changeableURL = URL;\r\n\r\n\tif (country) {\r\n\t\tchangeableURL = `${URL}/countries/${country}`;\r\n\t}\r\n\r\n\ttry {\r\n\t\tconst {\r\n\t\t\tdata: { confirmed, recovered, deaths, lastUpdate },\r\n\t\t} = await axios.get(changeableURL);\r\n\r\n\t\tconst modifiedData = {\r\n\t\t\tconfirmed,\r\n\t\t\trecovered,\r\n\t\t\tdeaths,\r\n\t\t\tlastUpdate,\r\n\t\t};\r\n\t\treturn modifiedData;\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n\ttry {\r\n\t\tconst { data } = await axios.get(`${URL}/daily`);\r\n\r\n\t\tconst modifiedData = data.map(dailyData => ({\r\n\t\t\tconfirmed: dailyData.confirmed.total,\r\n\t\t\tdeaths: dailyData.deaths.total,\r\n\t\t\tdate: dailyData.reportDate,\r\n\t\t}));\r\n\r\n\t\treturn modifiedData;\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n\ttry {\r\n\t\tconst {\r\n\t\t\tdata: { countries },\r\n\t\t} = await axios.get(`${URL}/countries`);\r\n\t\treturn countries.map(country => country.name);\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../../api\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\n\r\nimport styles from \"./Chart.module.css\";\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n\tconst [dailyData, setDailyData] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchAPI = async () => {\r\n\t\t\tsetDailyData(await fetchDailyData());\r\n\t\t};\r\n\r\n\t\t// console.log(dailyData);\r\n\r\n\t\tfetchAPI();\r\n\t}, []);\r\n\r\n\tconst lineChart = dailyData.length ? (\r\n\t\t<Line\r\n\t\t\tdata={{\r\n\t\t\t\tlabels: dailyData.map(({ date }) => date),\r\n\t\t\t\tdatasets: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdata: dailyData.map(({ confirmed }) => confirmed),\r\n\t\t\t\t\t\tlabel: \"Infected\",\r\n\t\t\t\t\t\tborderColor: \"#3333ff\",\r\n\t\t\t\t\t\tfill: true,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdata: dailyData.map(({ deaths }) => deaths),\r\n\t\t\t\t\t\tlabel: \"Deaths\",\r\n\t\t\t\t\t\tborderColor: \"red\",\r\n\t\t\t\t\t\tbackgroundColor: \"rgba(255,0,0,.5)\",\r\n\t\t\t\t\t\tfill: true,\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t}}\r\n\t\t/>\r\n\t) : null;\r\n\r\n\tconst barChart = confirmed ? (\r\n\t\t<Bar\r\n\t\t\tdata={{\r\n\t\t\t\tlabels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n\t\t\t\tdatasets: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: \"People\",\r\n\t\t\t\t\t\tbackgroundColor: [\r\n\t\t\t\t\t\t\t\"rgba(0,0,255,.5)\",\r\n\t\t\t\t\t\t\t\"rgba(0,255,0,.5)\",\r\n\t\t\t\t\t\t\t\"rgba(255,0,0,.5)\",\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tdata: [confirmed.value, recovered.value, deaths.value],\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t}}\r\n\t\t\toptions={{\r\n\t\t\t\tlegend: { display: false },\r\n\t\t\t\ttitle: { display: true, text: `Country state in ${country}` },\r\n\t\t\t}}\r\n\t\t/>\r\n\t) : null;\r\n\r\n\treturn (\r\n\t\t<div className={styles.container}>{country ? barChart : lineChart}</div>\r\n\t);\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\nimport styles from \"./CountryPicker.module.css\";\r\nimport { fetchCountries } from \"../../api\";\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n\tconst [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchAPI = async () => {\r\n\t\t\tsetFetchedCountries(await fetchCountries());\r\n\t\t};\r\n\r\n\t\tfetchAPI();\r\n\t}, [setFetchedCountries]);\r\n\r\n\tconsole.log(fetchedCountries);\r\n\r\n\treturn (\r\n\t\t<FormControl className={styles.formControl}>\r\n\t\t\t<NativeSelect\r\n\t\t\t\tdefaultValue=''\r\n\t\t\t\tonChange={e => {\r\n\t\t\t\t\thandleCountryChange(e.target.value);\r\n\t\t\t\t}}>\r\n\t\t\t\t<option value='' selected>\r\n\t\t\t\t\tGlobal\r\n\t\t\t\t</option>\r\n\t\t\t\t{fetchedCountries.map((country, i) => (\r\n\t\t\t\t\t<option value={country} key={i}>\r\n\t\t\t\t\t\t{country}\r\n\t\t\t\t\t</option>\r\n\t\t\t\t))}\r\n\t\t\t</NativeSelect>\r\n\t\t</FormControl>\r\n\t);\r\n};\r\n\r\nexport default CountryPicker;\r\n","export default __webpack_public_path__ + \"static/media/image.9e5d4fc7.png\";","import React, { Component } from \"react\";\r\nimport { Cards, Chart, CountryPicker } from \"./components\";\r\nimport styles from \"./App.module.css\";\r\nimport { fetchData } from \"./api\";\r\n\r\nimport logo from \"./img/image.png\";\r\n\r\nclass App extends Component {\r\n\tstate = {\r\n\t\tdata: {},\r\n\t\tcountry: \"\",\r\n\t};\r\n\r\n\tasync componentDidMount() {\r\n\t\tconst FetchData = await fetchData();\r\n\r\n\t\tthis.setState({ data: FetchData });\r\n\t}\r\n\r\n\thandleCountryChange = async country => {\r\n\t\tconst fetchedData = await fetchData(country);\r\n\t\t// console.log(fetchedData);\r\n\t\tthis.setState({ data: fetchedData, country });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { data, country } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<div className={styles.container}>\r\n\t\t\t\t<img src={logo} alt='logo' className={styles.img} />\r\n\t\t\t\t<Cards data={data} />\r\n\t\t\t\t<CountryPicker handleCountryChange={this.handleCountryChange} />\r\n\t\t\t\t<Chart data={data} country={country} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3mSBS\",\"img\":\"App_img__3zzzb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2pUDD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2zHpm\"};"],"sourceRoot":""}